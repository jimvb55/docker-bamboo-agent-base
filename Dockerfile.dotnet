# Build command:
# docker build -f Dockerfile.dotnet --build-arg BAMBOO_VERSION=10.2.1 -t bamboo-agent-dotnet .
#
# .NET SDK LTS versions available:
#
# Debian 12 (Bookworm) based images:
# - mcr.microsoft.com/dotnet/sdk:6.0-bookworm-slim
# - mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim
#
# Ubuntu 22.04 (Jammy) based images:
# - mcr.microsoft.com/dotnet/sdk:6.0-jammy
# - mcr.microsoft.com/dotnet/sdk:8.0-jammy

ARG BASE_IMAGE=mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim
FROM $BASE_IMAGE

# LABEL maintainer="dc-deployments@atlassian.com"
# LABEL securitytxt="https://www.atlassian.com/.well-known/security.txt"

ENV APP_NAME                                bamboo_agent
ENV RUN_USER                                bamboo
ENV RUN_GROUP                               bamboo
ENV RUN_UID                                 1002
ENV RUN_GID                                 1002

ENV BAMBOO_AGENT_HOME                       /var/atlassian/application-data/bamboo-agent
ENV BAMBOO_AGENT_INSTALL_DIR                /opt/atlassian/bamboo
ENV KUBE_NUM_EXTRA_CONTAINERS               0
ENV EXTRA_CONTAINERS_REGISTRATION_DIRECTORY /pbc/kube
ENV DISABLE_AGENT_AUTO_CAPABILITY_DETECTION false

# .NET specific environment variables
ENV DOTNET_ROOT                             /usr/share/dotnet
ENV PATH                                    $DOTNET_ROOT:$PATH

# JAVA_HOME is required by the Bamboo Agent
ENV JAVA_HOME                               /usr/lib/jvm/default-java

WORKDIR $BAMBOO_AGENT_HOME

COPY entrypoint.py \
     probe-common.sh \
     probe-startup.sh \
     probe-readiness.sh \
     pre-launch.sh \
     shared-components/image/entrypoint_helpers.py  /
COPY shared-components/support                      /opt/atlassian/support
COPY config/*                                       /opt/atlassian/etc/

RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
         git git-lfs \
         openssh-client \
         python3 python3-jinja2 python-is-python3 \
         build-essential \
         default-jdk \
         curl \
         tini \
    && apt-get clean autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/* \
    && update-alternatives --display java | grep "link currently points to" | grep -o "/.*$" > /tmp/java_path \
    && export JAVA_BIN_PATH=$(cat /tmp/java_path) \
    && export JAVA_HOME=$(dirname $(dirname $JAVA_BIN_PATH)) \
    && echo "export JAVA_HOME=$JAVA_HOME" >> /etc/environment

# Install Octopus Deploy CLI
RUN curl -L https://github.com/OctopusDeploy/OctopusCLI/releases/download/v9.1.7/OctopusTools.9.1.7.linux-x64.tar.gz -o /tmp/OctopusCLI.tar.gz \
    && mkdir -p /opt/octopus \
    && tar xzf /tmp/OctopusCLI.tar.gz -C /opt/octopus \
    && ln -s /opt/octopus/octo /usr/local/bin/octo \
    && rm /tmp/OctopusCLI.tar.gz

ARG BAMBOO_VERSION
ENV BAMBOO_VERSION                          ${BAMBOO_VERSION}
ARG DOWNLOAD_URL=https://packages.atlassian.com/mvn/maven-atlassian-external/com/atlassian/bamboo/atlassian-bamboo-agent-installer/${BAMBOO_VERSION}/atlassian-bamboo-agent-installer-${BAMBOO_VERSION}.jar
ARG DOWNLOAD_USERNAME
ARG DOWNLOAD_PASSWORD

COPY bamboo-update-capability.sh /
RUN groupadd --gid ${RUN_GID} ${RUN_GROUP} \
    && useradd --uid ${RUN_UID} --gid ${RUN_GID} --home-dir ${BAMBOO_AGENT_HOME} --shell /bin/bash ${RUN_USER} \
    && echo PATH=$PATH > /etc/environment \
    \
    && mkdir -p                             ${BAMBOO_AGENT_INSTALL_DIR} \
    && chown -R ${RUN_USER}:root            ${BAMBOO_AGENT_INSTALL_DIR} \
    && if [ -n "${DOWNLOAD_USERNAME}" ] && [ -n "${DOWNLOAD_PASSWORD}" ]; then \
        curl -u ${DOWNLOAD_USERNAME}:${DOWNLOAD_PASSWORD} -L --silent ${DOWNLOAD_URL} -o "${BAMBOO_AGENT_INSTALL_DIR}/atlassian-bamboo-agent-installer.jar"; \
    else \
        curl -L --silent ${DOWNLOAD_URL} -o "${BAMBOO_AGENT_INSTALL_DIR}/atlassian-bamboo-agent-installer.jar"; \
    fi \
    && jar -tf                              "${BAMBOO_AGENT_INSTALL_DIR}/atlassian-bamboo-agent-installer.jar" \
    && mkdir -p                             ${BAMBOO_AGENT_HOME}/conf ${BAMBOO_AGENT_HOME}/bin \
    \
    # Register Java capabilities
    && java -version 2>&1 | head -n 1 | cut -d'"' -f2 > /tmp/java_version \
    && export JAVA_VERSION=$(cat /tmp/java_version) \
    && export JAVA_MAJOR_VERSION=$(echo $JAVA_VERSION | cut -d'.' -f1) \
    && export JAVA_MINOR_VERSION=$(echo $JAVA_VERSION | cut -d'.' -f2) \
    && /bamboo-update-capability.sh "JDK" ${JAVA_HOME}/bin/java \
    && /bamboo-update-capability.sh "system.jdk.JDK ${JAVA_MAJOR_VERSION}" ${JAVA_HOME}/bin/java \
    && /bamboo-update-capability.sh "system.jdk.JDK ${JAVA_MAJOR_VERSION}.${JAVA_MINOR_VERSION}" ${JAVA_HOME}/bin/java \
    && /bamboo-update-capability.sh "JDK ${JAVA_VERSION}" ${JAVA_HOME}/bin/java \
    \
    # Register .NET capabilities
    && /bamboo-update-capability.sh "dotnet" $(dotnet --version) \
    && /bamboo-update-capability.sh ".NET Core" $(dotnet --version) \
    && /bamboo-update-capability.sh "Octopus CLI" $(octo --version) \
    \
    # Register common capabilities
    && /bamboo-update-capability.sh "Python" /usr/bin/python3 \
    && /bamboo-update-capability.sh "Python 3" /usr/bin/python3 \
    && /bamboo-update-capability.sh "Git" /usr/bin/git \
    && chown -R ${RUN_USER}:root ${BAMBOO_AGENT_HOME} \
    && chmod -R 770 ${BAMBOO_AGENT_HOME} \
    && for file in "/opt/atlassian/support /entrypoint.py /entrypoint_helpers.py /probe-common.sh /probe-startup.sh /probe-readiness.sh /pre-launch.sh /bamboo-update-capability.sh"; do \
       chmod -R "u=rwX,g=rX,o=rX" ${file} && \
       chown -R root ${file}; done

CMD ["/usr/bin/tini", "--", "/entrypoint.py"]
ENTRYPOINT ["/pre-launch.sh"]
