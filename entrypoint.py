#!/usr/bin/python3

import os
import sys

from entrypoint_helpers import env, gen_cfg, logging, set_perms, str2bool, exec_app

RUN_USER = env['run_user']
RUN_GROUP = env['run_group']

BAMBOO_AGENT_HOME = env['bamboo_agent_home']
BAMBOO_AGENT_INSTALL_DIR = env['bamboo_agent_install_dir']

BAMBOO_EPHEMERAL_AGENT_DATA_KEY = 'bamboo_ephemeral_agent_data'
BAMBOO_EPHEMERAL_AGENT_DATA = env.get(BAMBOO_EPHEMERAL_AGENT_DATA_KEY)
BAMBOO_EPHEMERAL_AGENT_DATA_MAP = {}
if BAMBOO_EPHEMERAL_AGENT_DATA:
    BAMBOO_EPHEMERAL_AGENT_DATA_MAP = {env.split("=")[0].lower(): env.split("=")[1] for env in BAMBOO_EPHEMERAL_AGENT_DATA.split("#")}

BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES_KEY = 'bamboo_wrapper_java_additional_properties'
BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES = env.get(BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES_KEY)
BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES_MAP = {}
if BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES:
    BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES_MAP = {env.split("=")[0].lower(): env.split("=")[1] if "=" in env else "" for env in BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES.split("#")}

BAMBOO_SERVER_KEY = 'bamboo_server'
BAMBOO_SERVER = env.get(BAMBOO_SERVER_KEY) if env.get(BAMBOO_SERVER_KEY) else BAMBOO_EPHEMERAL_AGENT_DATA_MAP.get(BAMBOO_SERVER_KEY)
env[BAMBOO_SERVER_KEY] = BAMBOO_SERVER
BAMBOO_EPHEMERAL_AGENT_DATA_MAP.pop(BAMBOO_SERVER_KEY, None)

if not BAMBOO_SERVER:
    logging.error('No value for "BAMBOO_SERVER" found in the environment. Shutting down.')
    sys.exit(1)

BAMBOO_SERVER = BAMBOO_SERVER.rstrip('/')
if not BAMBOO_SERVER.endswith('/agentServer'):
    BAMBOO_SERVER += '/agentServer'
    env[BAMBOO_SERVER_KEY] = BAMBOO_SERVER

SECURITY_TOKEN_KEY = "security_token"
SECURITY_TOKEN = env.get(SECURITY_TOKEN_KEY) if env.get(SECURITY_TOKEN_KEY) else BAMBOO_EPHEMERAL_AGENT_DATA_MAP.get(SECURITY_TOKEN_KEY)
if SECURITY_TOKEN is not None:
    env[SECURITY_TOKEN_KEY] = SECURITY_TOKEN
BAMBOO_EPHEMERAL_AGENT_DATA_MAP.pop(SECURITY_TOKEN_KEY, None)

#setting remaining environment variables
ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES = ""
for key, value in BAMBOO_EPHEMERAL_AGENT_DATA_MAP.items():
    if ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES:
        ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES = ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES + '#'
    ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES = ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES + key + '=' + value

if ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES:
    env[BAMBOO_EPHEMERAL_AGENT_DATA_KEY] = ACCUMULATED_REMAINING_ENVIRONMENT_VARIABLES

ACCUMULATED_ADDITIONAL_PROPERTIES = ""
for key, value in BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES_MAP.items():
    if ACCUMULATED_ADDITIONAL_PROPERTIES:
        ACCUMULATED_ADDITIONAL_PROPERTIES = ACCUMULATED_ADDITIONAL_PROPERTIES + '#'
    ACCUMULATED_ADDITIONAL_PROPERTIES = ACCUMULATED_ADDITIONAL_PROPERTIES + key + '=' + value
if ACCUMULATED_ADDITIONAL_PROPERTIES:
    env[BAMBOO_WRAPPER_JAVA_ADDITIONAL_PROPERTIES_KEY] = ACCUMULATED_ADDITIONAL_PROPERTIES

gen_cfg('wrapper.conf.j2', f'{BAMBOO_AGENT_HOME}/conf/wrapper.conf',
        user=RUN_USER, group=RUN_GROUP, overwrite=False)

JAVA_OPTS = f'-Dbamboo.home={BAMBOO_AGENT_HOME}'

AGENT_OPTS = [f'{BAMBOO_SERVER}']
if SECURITY_TOKEN:
    AGENT_OPTS.extend(['-t', f'{SECURITY_TOKEN}'])

java_home = os.getenv('JAVA_HOME')

exec_app([f'{java_home}/bin/java', JAVA_OPTS, '-jar', f'{BAMBOO_AGENT_INSTALL_DIR}/atlassian-bamboo-agent-installer.jar'] + AGENT_OPTS, BAMBOO_AGENT_HOME, name='Bamboo Agent', env_cleanup=True)
